<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport"
        content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>DongwonMap</title>

    <link rel="stylesheet" href="./css/index.css" />
    <script type="text/javascript"
        src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=az6haq9mh5 "></script>
    <script type="text/javascript"
        src="//dapi.kakao.com/v2/maps/sdk.js?appkey=87865112ea25b9c326a65e83e027b233&libraries=services"></script>
</head>
<script type="text/javascript" src="./js/MarkerClustering.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"
    integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>


<body>
    <div id="navbar">Kurly To The Moon</div>

    <div id="search">
        <input id="search_input" placeholder="목적지를 입력해주세요" />
        <button id="search_button">
            <i class="fas fa-search fa"></i>
        </button>
    </div>

    <div id="current">
        <i class="fa fa-crosshairs fa-xs"></i>
    </div>

    <div id="map" style="width:100%;height:100vh;"></div>

    <script>
        /**MYSQL DB 쿼리데이터 받아와서 JSON 파싱해 놓은 변수*/
        var objList = "<%= JSON.stringify(objList)  %>";
        objList = objList.replaceAll('&#34;', '\"');
        objList = JSON.parse(objList);


        /**Naver Map 띄우깅*/
        var mapOptions = {
            center: new naver.maps.LatLng(37.49812596900295, 127.02805117926182),
            zoom: 12,

            mapTypeControlOptions: {
                style: naver.maps.MapTypeControlStyle.BUTTON,
                position: naver.maps.Position.TOP_RIGHT,
            }
        };

        var map = new naver.maps.Map('map', mapOptions);



        /**카카오 맵 API GEOCODER 사용 변수 */
        var geocoder = new kakao.maps.services.Geocoder();

        const searchAddress = addressName => {
            return new Promise((resolve, reject) => {
                geocoder.addressSearch(addressName, (result, status) => {
                    result = JSON.stringify(result);
                    result = result.replaceAll("&#34", "\"");
                    result = JSON.parse(result);

                    if (status === kakao.maps.services.Status.OK) {
                        return resolve(result);
                    }
                    return reject();
                })

            })
        }

        let driver_color = [];
        var markerList = [];
        var infoWindowList = [];

        async function getData() {
            const markers = await Promise.allSettled(objList.map(o => o.address_name).map(searchAddress));

            for (var i = 0; i < objList.length; i++) {
                //드라이버 별 랜덤색상 적용
                if (driver_color[objList[i].driver_region] == null)
                    driver_color[objList[i].driver_region] = Math.random();

                if (markers[i].status === "fulfilled") {
                    var latlng = new naver.maps.LatLng(markers[i].value[0].y, markers[i].value[0].x);
                    var colorCode = "#" + Math.round(driver_color[objList[i].driver_region] * 0xffffff).toString(16);

                    marker = new naver.maps.Marker({
                        map: map,
                        position: latlng,
                        icon: {
                            //content: "<div class='marker'></div>",
                            content: `<i class='fas fa-box fa-xs' style="color:${colorCode};"></i>`,
                            anchor: new naver.maps.Point(6, 6),
                        },
                    })

                    var info_content = `<div class='infowindow_wrap'>
                                        <div class='infowindow_address_name'>주소 : ${objList[i].address_name}</div>
                                        <div class='infowindow_box_number'>배달 개수 : ${objList[i].delivery_box} 개</div>
                                        <div class='infowindow_delivery_difficulty'>배달 난이도 : ${objList[i].delivery_difficulty} 점</div>
                                        </div>`

                    var infowindow = new naver.maps.InfoWindow({
                        content: info_content,
                        backgroundColor: "#00ff0000",
                        borderColor: "#00ff0000",
                        anchorSize: new naver.maps.Size(0, 0)
                    })

                    markerList.push(marker);
                    infoWindowList.push(infowindow);

                }
            }


            for (var i = 0, ii = markerList.length; i < ii; i++) {
                naver.maps.Event.addListener(map, "click", ClickMap(i));
                naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i, infoWindowList[i]));
            }

            function getClickHandler(i, infowindowContent) {
                return function () {
                    var marker = markerList[i];
                    var infowindow = infowindowContent;

                    if (infowindow.getMap()) {
                        infowindow.close();
                    } else {
                        infowindow.open(map, marker)
                    }

                }
            }

            function ClickMap(i) {
                return function () {
                    var infowindow = infoWindowList[i]
                    infowindow.close()
                }
            }
        }

        getData();



        naver.maps.Event.once(map, 'init', function () {
            trafficLayer.setMap(map);
        });



        var currentOpen;


        console.log(markerList);
        for (var i = 0, ii = markerList.length; i < ii; i++) {
            naver.maps.Event.addListener(map, "click", ClickMap(i));
            naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i));
        }


        // 마커클러스터링 구현
        // const cluster1 = {
        //     content: '<div id="clus" style="cursor:pointer;width:40px;height:40px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(http://61.252.59.34:31014/s/fBSYQ7tDA6oXBTS/preview);background-size:contain;" ></div> ',
        //     size: N.Size(20, 20),
        //     anchor: N.Point(20, 20)
        // };

        // const cluster2 = {
        //     content: '<div id="clus" style="cursor:pointer;width:30px;height:30px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(http://61.252.59.34:31014/s/fBSYQ7tDA6oXBTS/preview);background-size:contain;" ></div> ',
        //     size: N.Size(20, 20),
        //     anchor: N.Point(20, 20)
        // }

        // const cluster3 = {
        //     content: '<div id="clus" style="cursor:pointer;width:20px;height:20px;line-height:42px;font-size:10px;color:white;text-align:center;font-weight:bold;background:url(http://61.252.59.34:31014/s/fBSYQ7tDA6oXBTS/preview);background-size:contain;" ></div> ',
        //     size: N.Size(20, 20),
        //     anchor: N.Point(20, 20)
        // }

        // const MarkerClustering1 = new MarkerClustering({
        //     minClusterSize: 2,
        //     maxZoom: 16,
        //     map: map,
        //     markers: markerList,
        //     disableClickZoom: false,
        //     gridSize: 100,
        //     icons: [cluster1, cluster2, cluster3],
        //     indexGeneragor: [2, 5, 10],
        //     stylingFunction: function (clusterMarker, count) {
        //         //$(clusterMarker.getElement()).find('div:first-child').innerText(count);
        //         //console.log($(clusterMarker.getElement()).find('div:first-child'));

        //         document.getElementById('clus').innerText = count;
        //         console.log(clusterMarker);
        //     }

        // })

        //장소검색 바 구현
        let ps = new kakao.maps.services.Places();
        let search_arr = [];

        $("#search_input").on("keydown", function (e) {
            if (e.keyCode === 13) {
                let content = $(this).val();
                ps.keywordSearch(content, placeSearchCB);
            }
        });

        $("#search_button").on("click", function (e) {
            let content = $("#search_input").val();
            ps.keywordSearch(content, placeSearchCB);
        })
        function placeSearchCB(data, status, pagination) {
            if (status === kakao.maps.services.Status.OK) {
                let target = data[0];
                const lat = target.y;
                const lng = target.x;
                const latlng = new naver.maps.LatLng(lat, lng);
                marker = new naver.maps.Marker({
                    position: latlng,
                    map: map
                })
                if (search_arr.length == 0) {
                    search_arr.push(marker)
                } else {
                    search_arr.push(marker)
                    let pre_marker = search_arr.splice(0, 1);
                    pre_marker[0].setMap(null);
                }

                map.setZoom(14, false);
                map.panTo(latlng);

            } else {
                alert("검색 결과 없음");
            }
        }
    </script>
    <script src="https://kit.fontawesome.com/6478f529f2.js" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/3b5864e969.js" crossorigin="anonymous"></script>


</body>

</html>